{"version":3,"sources":["components/actions/index.js","components/user/user/index.js","components/user/getUsers/index.js","components/user/addUser/index.js","components/tweet/addForm/addForm.js","App.js","reportWebVitals.js","components/reducer/tweetReducer.js","components/reducer/userReducer.js","components/reducer/index.js","components/store/store.js","index.js"],"names":["START_GET_USERS_REQUEST","GET_USERS_SUCCESS","START_POST_USER_REQUEST","POST_USER_SUCCESS","GET_POSTS_REQUEST","GET_POSTS_SUCCESS","POST_POST_REQUEST","POST_POST_SUCCESS","getUsersRequest","type","getUserSuccess","data","payload","postUserRequest","postUserSuccess","postPostRequest","postPostSuccess","obj","User","props","className","src","avatar","alt","name","username","showUsersList","users","map","user","id","Users","AddUser","state","nickname","image","count","onChangeUserInput","e","target","value","setState","split","includes","onAddUser","addUser","this","placeholder","onChange","onClick","React","Component","AddForm","author","text","img","handleInputChange","event","sentData","userId","filter","console","log","content","addPost","getOptions","App","getUsers","to","path","postPost","connect","store","post","dispatch","axios","get","then","result","a","fetch","method","body","JSON","stringify","headers","response","json","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","postReducer","action","userReducer","rootReducer","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1de9e28.chunk.js","sourcesContent":["\r\nimport axios from \"axios\"\r\n\r\nexport const START_GET_USERS_REQUEST = 'START_GET_USERS_REQUEST';\r\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\r\nexport const START_POST_USER_REQUEST = 'START_POST_USER_REQUEST';\r\nexport const POST_USER_SUCCESS = 'POST_USER_SUCCESS';\r\nexport const SET_LIKE = 'SET_LIKE';\r\nexport const GET_POSTS_REQUEST = 'GET_POSTS_REQUEST';\r\nexport const GET_POSTS_SUCCESS = 'GET_POSTS_SUCCESS';\r\nexport const POST_POST_REQUEST = 'POST_POST_REQUEST';\r\nexport const POST_POST_SUCCESS = 'POST_POST_SUCCESS';\r\n\r\n\r\nexport const getUsers = () => {\r\n    return dispatch => {\r\n        dispatch(getUsersRequest());\r\n        axios\r\n        .get('http://domer.tech:9999/users')\r\n        .then(result => {\r\n                    dispatch(getUserSuccess(result.data))\r\n                }\r\n            )\r\n    }\r\n}\r\n\r\nexport   function addUser  ({name, username, avatar})  {\r\n    const url = 'http://domer.tech:9999/users';\r\n    const data = {\r\n        name,\r\n        username,\r\n        avatar\r\n    };\r\n\r\n    return async dispatch => {\r\n        dispatch(postUserRequest());\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n              method: 'POST', \r\n              body: JSON.stringify(data), \r\n              headers: {\r\n                'Content-Type': 'application/json'\r\n              }\r\n            });\r\n            const json = await response.json();\r\n            console.log('Success:', JSON.stringify(json));\r\n            postUserSuccess(json)\r\n          } catch (error) {\r\n            console.error('Error:', error);\r\n          }\r\n        }\r\n}\r\n\r\nexport function getPosts() {\r\n    return dispatch => {\r\n        dispatch(getPostsRequest());\r\n        fetch('http://domer.tech:9999/tweets/').then(res => dispatch(getPostsSuccess(res.data.data)))\r\n    }\r\n}\r\nexport const postPost=({userId,content,image})=>{\r\n    const url = 'http://domer.tech:9999/tweets';\r\n    const data = {\r\n        userId,\r\n        content,\r\n        image\r\n    };\r\n    return async dispatch =>{\r\n       dispatch(postPostRequest());\r\n\r\n       try {\r\n        const response = await fetch(url, {\r\n          method: 'POST', \r\n          body: JSON.stringify(data), \r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        const json = await response.json();\r\n        console.log('Success:', JSON.stringify(json));\r\n        postPostSuccess(json)\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nconst getUsersRequest = ()=> {\r\n    return{\r\n        type: START_GET_USERS_REQUEST,\r\n    }\r\n};\r\nconst getUserSuccess = (data)=>{\r\n    return{\r\n        type: GET_USERS_SUCCESS,\r\n        payload: data\r\n    }\r\n};\r\nconst postUserRequest = () => {\r\n    return {\r\n        type: START_POST_USER_REQUEST\r\n    }\r\n};\r\nconst postUserSuccess = (data) => {\r\n    return {\r\n        type: POST_USER_SUCCESS,\r\n        payload : {...data}\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst getPostsRequest = () => {\r\n    return {\r\n        type: GET_POSTS_REQUEST\r\n    }\r\n};\r\n\r\nconst getPostsSuccess = (data) => {\r\n    return {\r\n        type: GET_POSTS_SUCCESS,\r\n        payload : data\r\n    }\r\n};\r\nconst postPostRequest = ()=>{\r\n    return{\r\n        type: POST_POST_REQUEST\r\n    }\r\n};\r\nconst postPostSuccess = (obj)=>{\r\n    return{\r\n        type: POST_POST_SUCCESS,\r\n        payload: obj\r\n    }\r\n};","import React from \"react\";\r\nimport './user.css'\r\n\r\nconst User = ({props})=>{\r\n  return(\r\n      <div className = 'user' >\r\n          <img className = 'user-img' src={props.avatar} alt=\"avatar\"/>\r\n          <span className = 'name'>{props.name}</span>\r\n          <span className = 'username'>{props.username}</span>\r\n      </div>\r\n  )\r\n};\r\nexport default User;\r\n\r\n","import React from 'react';\r\nimport User from '../user/index'\r\n\r\nconst Users = (props)=> {\r\n    return(\r\n        <div>\r\n            <h2>Users</h2>\r\n            {showUsersList(props.users)}\r\n        </div>\r\n    )\r\n    };\r\n    \r\n    const showUsersList = (users)=>{\r\n      let elements = users.map(user=>{\r\n          return(\r\n              <User key={user.id} props={user}/>\r\n          )\r\n      });\r\n      return elements;\r\n    };\r\n    \r\n    export default Users;\r\n    ","import React, {useState} from 'react';\r\nimport './addUser.css'\r\n\r\nexport default class AddUser extends React.Component{\r\n    state = {\r\n        name : '',\r\n        nickname : '@',\r\n        image : ''\r\n    };\r\n    count = 0;\r\n    onChangeUserInput=(e)=>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        if(name!=='nickname') {\r\n            this.setState({[name]: value})\r\n        }else {\r\n            !this.state.nickname.split('').includes('@')? this.setState({'nickname':'@'+value}):this.setState({'nickname':value})\r\n\r\n        }\r\n\r\n    };\r\n    onAddUser = ()=>{\r\n        let obj = {\r\n            name : this.state.name,\r\n            username:this.state.nickname,\r\n            avatar: this.state.image\r\n        };\r\n        this.setState({name:''});\r\n        this.setState({nickname:'@'});\r\n        this.setState({image:''});\r\n      this.props.addUser(obj);\r\n    };\r\nrender() {\r\n      return(\r\n          <div className={\"add-user-form\"}>\r\n              <h1>Add User</h1>\r\n              <input type=\"text\" name = \"name\"     value={this.state.name} placeholder={'name'} onChange={(e)=>this.onChangeUserInput(e)}/>\r\n              <input type=\"text\" name=\"nickname\" value={this.state.nickname}  placeholder={'nickname'} onChange={(e)=>this.onChangeUserInput(e)}/>\r\n              <input type=\"text\" name=\"image\" value={this.state.image}  placeholder={'image link'} onChange={(e)=>this.onChangeUserInput(e)}/>\r\n              <button type=\"button\" className={'add-user-btn'} onClick={()=>this.onAddUser()}>Add user</button>\r\n          </div>\r\n      )\r\n}\r\n}","import React from \"react\";\r\nimport './addUser.css'\r\n\r\nexport default class AddForm extends React.Component{\r\n     state = {\r\n            author : 'Anakin Skywalker',\r\n            text : '',\r\n            img : ''\r\n\r\n        };\r\n        handleInputChange = event =>{\r\n            const name = event.target.name;\r\n            const value = event.target.value;\r\n            this.setState({[name] : value});\r\n            this.setState({id : event.target.id})\r\n        };\r\n        sentData = () =>{\r\n            let userId = this.props.users.filter(user=>user.name===this.state.author)[0].id;\r\n            console.log(userId);\r\n           let obj= {\r\n               userId : userId,\r\n                content: this.state.text,\r\n                image: this.state.img,\r\n            };\r\n            this.setState({text:''});\r\n            this.setState({img:''});\r\n           this.props.addPost(obj); \r\n       }\r\n    render(){\r\n       \r\n        return(\r\n        <form className = \"add-user-form\">\r\n            <h1>Add Post</h1>\r\n            <select name=\"author\" id='' onChange={this.handleInputChange}>\r\n                {getOptions(this.props.users)}\r\n            </select>\r\n            <input name = 'text' placeholder={\"post text\"} value={this.state.text} onChange={this.handleInputChange} type=\"text\"/>\r\n            <input name = 'img' placeholder={\"image url\"} value={this.state.img} onChange={this.handleInputChange} type=\"text\"/>\r\n                <button type=\"button\" onClick={this.sentData} className = 'add-user-btn'> Add Post</button>\r\n        </form>\r\n        )\r\n    }\r\n}\r\nconst getOptions = (users)=>{\r\n    let options = users.map(user=>{\r\n        return <option name={'author'}   key = {user.id} value={user.name}>{user.name}</option>\r\n    });\r\n    return options;\r\n  };","import './App.css'\nimport {connect} from \"react-redux\";\nimport React from \"react\";\nimport {getUsers,addUser, postPost} from \"./components/actions/index\";\nimport {Switch,Link,Route,Redirect} from \"react-router-dom\";\nimport Users from './components/user/getUsers';\nimport AddUser from './components/user/addUser';\nimport AddForm from './components/tweet/addForm/addForm';\n\n\nexport  class App extends React.Component{\n  componentDidMount() {\n    this.props.getUsers();\n}\n  render(){\n\n  return (\n    <div >\n      <div className = 'header'>\n        <ul className = 'menu'>\n          <li ><Link to=\"/users\">Users</Link></li>\n          <li ><Link to=\"/addUser\">Add User</Link></li>\n          <li ><Link to=\"/addTweetOnServer\">Add Post</Link></li>\n        </ul>\n        </div>\n        <Switch>\n                <Route path = '/users' ><Users users={this.props.users}  /></Route>\n                <Route  path = '/addUser'><AddUser addUser={this.props.addUser}/></Route>\n                <Route  path = '/addTweetOnServer'><AddForm users = {this.props.users} addPost={this.props.postPost}/></Route>\n        </Switch>\n\n    </div>\n  );\n}\n}\n\n\nconst  mapDispatchToProps = dispatch =>{\n  return{\n      getUsers : () =>  dispatch(getUsers()),\n      addUser : payload => dispatch(addUser(payload)),\n      postPost : payload=>dispatch(postPost(payload))\n  }\n};\nconst mapStateToProps = store =>{\n    console.log(store.post.data);\n    return{\n      post : {data: store.post.data, users : store.user.data},\n      users : store.user.data\n    }\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {GET_POSTS_SUCCESS,GET_POSTS_REQUEST,POST_POST_SUCCESS,POST_POST_REQUEST} from \"../actions/index\";\r\n\r\nconst initialState = {\r\n    data: []\r\n};\r\n\r\nconst postReducer = (state = initialState, action)=>{\r\n    switch (action.type) {\r\n        \r\n        case GET_POSTS_REQUEST:\r\n            return state;\r\n        case GET_POSTS_SUCCESS:\r\n            return {...state, data:action.payload};\r\n        case POST_POST_REQUEST:\r\n            return state;\r\n        case POST_POST_SUCCESS:\r\n            return {...state, data:action.payload};\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n};\r\nexport default postReducer;","import {START_GET_USERS_REQUEST,GET_USERS_SUCCESS,START_POST_USER_REQUEST,POST_USER_SUCCESS} from \"../actions/index\";\r\n\r\nconst initialState = {\r\n    data : []\r\n};\r\n\r\nconst userReducer  = (state = initialState,action)=>{\r\n    switch (action.type) {\r\n        case START_GET_USERS_REQUEST:\r\n            return {...state};\r\n        case GET_USERS_SUCCESS:\r\n            return {...state, data: action.payload.data};\r\n        case START_POST_USER_REQUEST:\r\n            return {...state};\r\n        case POST_USER_SUCCESS:\r\n            console.log('posted user');\r\n            return {...state};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default userReducer;","import {combineReducers} from \"redux\";\r\nimport postReducer from \"./tweetReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n        post: postReducer,\r\n    user: userReducer\r\n    }\r\n);\r\n","import {createStore,applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducer\";\r\n\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(thunk));\r\nexport  default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\"\nimport store from \"./components/store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n       <App/>\n    </HashRouter>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}